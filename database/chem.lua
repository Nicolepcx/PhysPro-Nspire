--@@  chem.lua
--@@  LGLP 3 License
--@@  alex3yoyo

-- Chemistry values
function initElementValues() -- Stores elements into nspire documents variables
    local elementValues = {
        ["ch.mass"] = [[Define ch.mass = { 1.00794, 4.002602, 6.941, 9.012182, 10.811, 12.0107, 14.00674, 15.9994, 18.9984032, 20.1797, 22.98976928, 24.305, 26.9815386, 28.0855, 30.973762, 32.065, 35.4527, 39.948, 39.0983, 40.078, 44.955912, 47.867, 50.9415, 51.9961, 54.938045, 55.845, 58.933195, 58.6934, 63.546, 65.409, 69.723, 72.64, 74.9216, 78.96, 79.904, 83.798, 85.4678, 87.62, 88.90585, 91.224, 92.90638, 95.96, 98, 101.07, 102.9055, 106.42, 107.8682, 112.411, 114.818, 118.71, 121.76, 127.6, 126.90447, 131.293, 132.9054519, 137.327, 138.90547, 140.116, 140.90765, 144.242, 145, 150.36, 151.964, 157.25, 158.92535, 162.5, 164.93032, 167.259, 168.93421, 173.054, 174.9668, 178.49, 180.94788, 183.84, 186.207, 190.23, 192.217, 195.084, 196.966569, 200.59, 204.3833, 207.2, 208.9804, 209, 210, 222, 223, 226, 227, 232.03806, 231.03588, 238.02891, 237, 244, 243, 247, 247, 251, 252, 257, 258, 259, 262, 261, 262, 266, 264, 277, 268, 271, 272, 285, 284, 289, 288, 293, undef, 294 }]],
        ["ch.dens"] = [[Define ch.dens = { 0.0899, 0.1785, 535, 1848, 2460, 2260, 1.251, 1.429, 1.696, 0.9, 968, 1738, 2700, 2330, 1823, 1960, 3.214, 1.784, 856, 1550, 2985, 4507, 6110, 7140, 7470, 7874, 8900, 8908, 8920, 7140, 5904, 5323, 5727, 4819, 3120, 3.75, 1532, 2630, 4472, 6511, 8570, 10280, 11500, 12370, 12450, 12023, 10490, 8650, 7310, 7310, 6697, 6240, 4940, 5.9, 1879, 3510, 6146, 6689, 6640, 7010, 7264, 7353, 5244, 7901, 8219, 8551, 8795, 9066, 9321, 6570, 9841, 13310, 16650, 19250, 21020, 22610, 22650, 21090, 19300, 13534, 11850, 11340, 9780, 9196, undef, 9.73, undef, 5000, 10070, 11724, 15370, 19050, 20450, 19816, undef, 13510, 14780, 15100, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef }]],
        ["ch.c"] = [[Define ch.c = { 14300, 5193.1, 3570, 1820, 1030, 710, 1040, 919, 824, 1030., 1230, 1020, 904, 710, 769.7, 705, 478.2, 520.33, 757, 631, 567, 520, 489, 448, 479, 449, 421, 445, 384.4, 388, 371, 321.4, 328, 321.2, 947.3, 248.05, 364, 300, 298, 278, 265, 251, 63, 238, 240, 240, 235, 230, 233, 217, 207, 201, 429., 158.32, 242, 205, 195, 192, 193, 190, undef, 196, 182, 240, 182, 167, 165, 168, 160, 154, 154, 144, 140, 132, 137, 130, 131, 133, 129.1, 139.5, 129, 127, 122, undef, undef, 93.65, undef, 92., 120, 118, 99.1, 116, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef }]],
        ["ch.melt"] = [[Define ch.melt = { 14.01, 0.95, 453.69, 1560, 2348, 3823, 63.05, 54.8, 53.5, 24.56, 370.87, 923, 933.47, 1687, 317.3, 388.36, 171.6, 83.8, 336.53, 1115, 1814, 1941, 2183, 2180, 1519, 1811, 1768, 1728, 1357.77, 692.68, 302.91, 1211.4, 1090, 494, 265.8, 115.79, 312.46, 1050, 1799, 2128, 2750, 2896, 2430, 2607, 2237, 1828.05, 1234.93, 594.22, 429.75, 505.08, 903.78, 722.66, 386.85, 161.3, 301.59, 1000, 1193, 1071, 1204, 1294, 1373, 1345, 1095, 1586, 1629, 1685, 1747, 1770, 1818, 1092, 1936, 2506, 3290, 3695, 3459, 3306, 2739, 2041.4, 1337.33, 234.32, 577, 600.61, 544.4, 527, 575, 202, 300, 973, 1323, 2023, 1845, 1408, 917, 913, 1449, 1618, 1323, 1173, 1133, 1800, 1100, 1100, 1900, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef }]],
        ["ch.boil"] = [[Define ch.boil = { 20.28, 4.22, 1615, 2743, 4273, 4300, 77.36, 90.2, 85.03, 27.07, 1156, 1363, 2792, 3173, 553.6, 717.87, 239.11, 87.3, 1032, 1757, 3103, 3560, 3680, 2944, 2334, 3134, 3200, 3186, 3200, 1180, 2477, 3093, 887, 958, 332, 119.93, 961, 1655, 3618, 4682, 5017, 4912, 4538, 4423, 3968, 3236, 2435, 1040, 2345, 2875, 1860, 1261, 457.4, 165.1, 944, 2143, 3737, 3633, 3563, 3373, 3273, 2076, 1800, 3523, 3503, 2840, 2973, 3141, 2223, 1469, 3675, 4876, 5731, 5828, 5869, 5285, 4701, 4098, 3129, 629.88, 1746, 2022, 1837, 1235, 610, 211.3, 950, 2010, 3473, 5093, 4273, 4200, 4273, 3503, 2284, 3383, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef }]],
        ["ch.h_fus"] = [[Define ch.h_fus = { 0.558, 0.02, 3., 7.95, 50, 105, 0.36, 0.222, 0.26, 0.34, 2.6, 8.7, 10.7, 50.2, 0.64, 1.73, 3.2, 1.18, 2.33, 8.54, 16, 18.7, 22.8, 20.5, 13.2, 13.8, 16.2, 17.2, 13.1, 7.35, 5.59, 31.8, 27.7, 5.4, 5.8, 1.64, 2.19, 8, 11.4, 21, 26.8, 36, 23, 25.7, 21.7, 16.7, 11.3, 6.3, 3.26, 7., 19.7, 17.5, 7.76, 2.3, 2.09, 8., 6.2, 5.5, 6.9, 7.1, 7.7, 8.6, 9.2, 10, 10.8, 11.1, 17., 19.9, 16.8, 7.7, 22, 25.5, 36, 35, 33, 31, 26, 20, 12.5, 2.29, 4.2, 4.77, 10.9, 13, 6, 3, 2, 8, 14, 16, 15, 14, 10, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef }]],
        ["ch.h_vap"] = [[Define ch.h_vap = { 0.452, 0.083, 147, 297, 507, 715, 2.79, 3.41, 3.27, 1.75, 97.7, 128, 293, 359, 12.4, 9.8, 10.2, 6.5, 76.9, 155, 318, 425, 453, 339, 220, 347, 375, 378, 300, 119, 256, 334, 32.4, 26, 14.8, 9.02, 72, 137, 380, 580, 690, 600, 550, 580, 495, 380, 255, 100, 230, 290, 68, 48, 20.9, 12.64, 65, 140, 400, 350, 330, 285, 290, 175, 175, 305, 295, 280, 265, 285, 250, 160, 415, 630, 735, 800, 705, 630, 560, 490, 330, 59.2, 165, 178, 160, 100, 40, 17, 65, 125, 400, 530, 470, 420, 335, 325, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef }]]
        --["ch.sym"] = [[Define ch.sym = { "H", "He", "Li", "Be", "B", "C", "N", "O", "F", "Ne", "Na", "Mg", "Al", "Si", "P", "S", "Cl", "Ar", "K", "Ca", "Sc", "Ti", "V", "Cr", "Mn", "Fe", "Co", "Ni", "Cu", "Zn", "Ga", "Ge", "As", "Se", "Br", "Kr", "Rb", "Sr", "Y", "Zr", "Nb", "Mo", "Tc", "Ru", "Rh", "Pd", "Ag", "Cd", "In", "Sn", "Sb", "Te", "I", "Xe", "Cs", "Ba", "La", "Ce", "Pr", "Nd", "Pm", "Sm", "Eu", "Gd", "Tb", "Dy", "Ho", "Er", "Tm", "Yb", "Lu", "Hf", "Ta", "W", "Re", "Os", "Ir", "Pt", "Au", "Hg", "Tl", "Pb", "Bi", "Po", "At", "Rn", "Fr", "Ra", "Ac", "Th", "Pa", "U", "Np", "Pu", "Am", "Cm", "Bk", "Cf", "Es", "Fm", "Md", "No", "Lr", "Rf", "Db", "Sg", "Bh", "Hs", "Mt", "Ds", "Rg", "Uub", "Uut", "Uuq", "Uup", "Uuh", "Uus", "Uuo" }]]
    }
    for k,v in pairs(elementValues) do
        math.eval(v) -- stores
        math.eval("Lock "..k) -- Locks the loaded lists
    end
end

--[[
function getChem(k, v)
    if v >= 1 and v <= # ch.atom then
        return ch[k][v]
    else
        return 0
    end
end
]]--
